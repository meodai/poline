"use strict";var v=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var M=Object.getOwnPropertyNames;var V=Object.prototype.hasOwnProperty;var a=Math.pow;var L=(e,t)=>{for(var o in t)v(e,o,{get:t[o],enumerable:!0})},E=(e,t,o,i)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of M(t))!V.call(e,n)&&n!==o&&v(e,n,{get:()=>t[n],enumerable:!(i=S(t,n))||i.enumerable});return e};var z=e=>E(v({},"__esModule",{value:!0}),e);var R={};L(R,{Poline:()=>f,PolinePicker:()=>g,positionFunctions:()=>y});module.exports=z(R);var _=(e,t)=>{let[o,i,n]=e,r=.5,l=.5,c=Math.atan2(i-l,o-r)*(180/Math.PI);c=(360+c)%360;let h=n,d=Math.sqrt(Math.pow(i-l,2)+Math.pow(o-r,2))/r;return[c,h,t?1-d:d]},w=(e,t)=>{let[o,i,n]=e,r=.5,l=.5,s=o/(180/Math.PI),c=(t?1-n:n)*r,h=r+c*Math.cos(s),P=l+c*Math.sin(s);return[h,P,i]},F=(e=Math.random()*360,t=[Math.random(),Math.random()],o=[.75+Math.random()*.2,.3+Math.random()*.2])=>[[e,t[0],o[0]],[(e+60+Math.random()*180)%360,t[1],o[1]]];var k=(e,t,o,i=!1,n=(s,c)=>c?1-s:s,r=(s,c)=>c?1-s:s,l=(s,c)=>c?1-s:s)=>{let s=n(e,i),c=r(e,i),h=l(e,i),P=(1-s)*t[0]+s*o[0],d=(1-c)*t[1]+c*o[1],A=(1-h)*t[2]+h*o[2];return[P,d,A]},G=(e,t,o=4,i=!1,n=(s,c)=>c?1-s:s,r=(s,c)=>c?1-s:s,l=(s,c)=>c?1-s:s)=>{let s=[];for(let c=0;c<o;c++){let[h,P,d]=k(c/(o-1),e,t,i,n,r,l);s.push([h,P,d])}return s},X=e=>e,Y=(e,t=!1)=>t?1-a(1-e,2):a(e,2),T=(e,t=!1)=>t?1-a(1-e,3):a(e,3),$=(e,t=!1)=>t?1-a(1-e,4):a(e,4),Z=(e,t=!1)=>t?1-a(1-e,5):a(e,5),u=(e,t=!1)=>t?1-Math.sin((1-e)*Math.PI/2):Math.sin(e*Math.PI/2),q=(e,t=!1)=>t?1-Math.asin(1-e)/(Math.PI/2):Math.asin(e)/(Math.PI/2),H=(e,t=!1)=>t?1-Math.sqrt(1-a(e,2)):1-Math.sqrt(1-e),I=e=>a(e,2)*(3-2*e),y={linearPosition:X,exponentialPosition:Y,quadraticPosition:T,cubicPosition:$,quarticPosition:Z,sinusoidalPosition:u,asinusoidalPosition:q,arcPosition:H,smoothStepPosition:I},x=(e,t,o=!1)=>{let i=e[0],n=t[0],r=0;o&&i!==null&&n!==null?(r=Math.min(Math.abs(i-n),360-Math.abs(i-n)),r=r/360):r=i===null||n===null?0:i-n;let l=r,s=e[1]===null||t[1]===null?0:t[1]-e[1],c=e[2]===null||t[2]===null?0:t[2]-e[2];return Math.sqrt(l*l+s*s+c*c)},b=class{constructor({xyz:t,color:o,invertedLightness:i=!1}={}){this.x=0;this.y=0;this.z=0;this.color=[0,0,0];this._invertedLightness=!1;this._invertedLightness=i,this.positionOrColor({xyz:t,color:o,invertedLightness:i})}positionOrColor({xyz:t,color:o,invertedLightness:i=!1}){if(t&&o||!t&&!o)throw new Error("Point must be initialized with either x,y,z or hsl");t?(this.x=t[0],this.y=t[1],this.z=t[2],this.color=_([this.x,this.y,this.z],i)):o&&(this.color=o,[this.x,this.y,this.z]=w(o,i))}set position([t,o,i]){this.x=t,this.y=o,this.z=i,this.color=_([this.x,this.y,this.z],this._invertedLightness)}get position(){return[this.x,this.y,this.z]}set hsl([t,o,i]){this.color=[t,o,i],[this.x,this.y,this.z]=w(this.color,this._invertedLightness)}get hsl(){return this.color}get hslCSS(){let[t,o,i]=this.color;return`hsl(${t.toFixed(2)}, ${(o*100).toFixed(2)}%, ${(i*100).toFixed(2)}%)`}get oklchCSS(){let[t,o,i]=this.color;return`oklch(${(i*100).toFixed(2)}% ${(o*.4).toFixed(3)} ${t.toFixed(2)})`}get lchCSS(){let[t,o,i]=this.color;return`lch(${(i*100).toFixed(2)}% ${(o*150).toFixed(2)} ${t.toFixed(2)})`}shiftHue(t){this.color[0]=(360+(this.color[0]+t))%360,[this.x,this.y,this.z]=w(this.color,this._invertedLightness)}},f=class{constructor({anchorColors:t=F(),numPoints:o=4,positionFunction:i=u,positionFunctionX:n,positionFunctionY:r,positionFunctionZ:l,closedLoop:s,invertedLightness:c}={anchorColors:F(),numPoints:4,positionFunction:u,closedLoop:!1}){this._needsUpdate=!0;this._positionFunctionX=u;this._positionFunctionY=u;this._positionFunctionZ=u;this.connectLastAndFirstAnchor=!1;this._animationFrame=null;this._invertedLightness=!1;if(!t||t.length<2)throw new Error("Must have at least two anchor colors");this._anchorPoints=t.map(h=>new b({color:h,invertedLightness:c})),this._numPoints=o+2,this._positionFunctionX=n||i||u,this._positionFunctionY=r||i||u,this._positionFunctionZ=l||i||u,this.connectLastAndFirstAnchor=s||!1,this._invertedLightness=c||!1,this.updateAnchorPairs()}get numPoints(){return this._numPoints-2}set numPoints(t){if(t<1)throw new Error("Must have at least one point");this._numPoints=t+2,this.updateAnchorPairs()}set positionFunction(t){if(Array.isArray(t)){if(t.length!==3)throw new Error("Position function array must have 3 elements");if(typeof t[0]!="function"||typeof t[1]!="function"||typeof t[2]!="function")throw new Error("Position function array must have 3 functions");this._positionFunctionX=t[0],this._positionFunctionY=t[1],this._positionFunctionZ=t[2]}else this._positionFunctionX=t,this._positionFunctionY=t,this._positionFunctionZ=t;this.updateAnchorPairs()}get positionFunction(){return this._positionFunctionX===this._positionFunctionY&&this._positionFunctionX===this._positionFunctionZ?this._positionFunctionX:[this._positionFunctionX,this._positionFunctionY,this._positionFunctionZ]}set positionFunctionX(t){this._positionFunctionX=t,this.updateAnchorPairs()}get positionFunctionX(){return this._positionFunctionX}set positionFunctionY(t){this._positionFunctionY=t,this.updateAnchorPairs()}get positionFunctionY(){return this._positionFunctionY}set positionFunctionZ(t){this._positionFunctionZ=t,this.updateAnchorPairs()}get positionFunctionZ(){return this._positionFunctionZ}get anchorPoints(){return this._anchorPoints}set anchorPoints(t){this._anchorPoints=t,this.updateAnchorPairs()}updateAnchorPairs(){this._anchorPairs=[];let t=this.connectLastAndFirstAnchor?this.anchorPoints.length:this.anchorPoints.length-1;for(let o=0;o<t;o++){let i=[this.anchorPoints[o],this.anchorPoints[(o+1)%this.anchorPoints.length]];this._anchorPairs.push(i)}this.points=this._anchorPairs.map((o,i)=>{let n=o[0]?o[0].position:[0,0,0],r=o[1]?o[1].position:[0,0,0];return G(n,r,this._numPoints,!!(i%2),this.positionFunctionX,this.positionFunctionY,this.positionFunctionZ).map(l=>new b({xyz:l,invertedLightness:this._invertedLightness}))})}addAnchorPoint({xyz:t,color:o,insertAtIndex:i}){let n=new b({xyz:t,color:o,invertedLightness:this._invertedLightness});return i!==void 0?this.anchorPoints.splice(i,0,n):this.anchorPoints.push(n),this.updateAnchorPairs(),n}removeAnchorPoint({point:t,index:o}){if(!t&&o===void 0)throw new Error("Must provide a point or index");if(this.anchorPoints.length<3)throw new Error("Must have at least two anchor points");let i;if(o!==void 0?i=o:t&&(i=this.anchorPoints.indexOf(t)),i>-1&&i<this.anchorPoints.length)this.anchorPoints.splice(i,1),this.updateAnchorPairs();else throw new Error("Point not found")}updateAnchorPoint({point:t,pointIndex:o,xyz:i,color:n}){if(o!==void 0&&(t=this.anchorPoints[o]),!t)throw new Error("Must provide a point or pointIndex");if(!i&&!n)throw new Error("Must provide a new xyz position or color");return i&&(t.position=i),n&&(t.hsl=n),this.updateAnchorPairs(),t}getClosestAnchorPoint({xyz:t,hsl:o,maxDistance:i=1}){if(!t&&!o)throw new Error("Must provide a xyz or hsl");let n;t?n=this.anchorPoints.map(s=>x(s.position,t)):o&&(n=this.anchorPoints.map(s=>x(s.hsl,o,!0)));let r=Math.min(...n);if(r>i)return null;let l=n.indexOf(r);return this.anchorPoints[l]||null}set closedLoop(t){this.connectLastAndFirstAnchor=t,this.updateAnchorPairs()}get closedLoop(){return this.connectLastAndFirstAnchor}set invertedLightness(t){this._invertedLightness=t,this.updateAnchorPairs()}get invertedLightness(){return this._invertedLightness}get flattenedPoints(){return this.points.flat().filter((t,o)=>o!=0?o%this._numPoints:!0)}get colors(){let t=this.flattenedPoints.map(o=>o.color);return this.connectLastAndFirstAnchor&&t.pop(),t}cssColors(t="hsl"){let o={hsl:n=>n.hslCSS,oklch:n=>n.oklchCSS,lch:n=>n.lchCSS},i=this.flattenedPoints.map(o[t]);return this.connectLastAndFirstAnchor&&i.pop(),i}get colorsCSS(){return this.cssColors("hsl")}get colorsCSSlch(){return this.cssColors("lch")}get colorsCSSoklch(){return this.cssColors("oklch")}shiftHue(t=20){this.anchorPoints.forEach(o=>o.shiftHue(t)),this.updateAnchorPairs()}},{p5:m}=globalThis;if(m){console.info("p5 detected, adding poline to p5 prototype");let e=new f;m.prototype.poline=e;let t=()=>e.colors.map(o=>`hsl(${Math.round(o[0])},${o[1]*100}%,${o[2]*100}%)`);m.prototype.polineColors=t,m.prototype.registerMethod("polineColors",m.prototype.polineColors),globalThis.poline=e,globalThis.polineColors=t}var C="http://www.w3.org/2000/svg",p=100,g=class extends HTMLElement{constructor(){super();this.currentPoint=null;this.allowAddPoints=!1;this.attachShadow({mode:"open"}),this.interactive=this.hasAttribute("interactive"),this.allowAddPoints=this.hasAttribute("allow-add-points")}connectedCallback(){this.render(),this.interactive&&this.addEventListeners()}setPoline(o){this.poline=o,this.updateSVG(),this.updateLightnessBackground()}setAllowAddPoints(o){this.allowAddPoints=o}addPointAtPosition(o,i){if(!this.poline)return null;let n=o/this.svg.clientWidth,r=i/this.svg.clientHeight,l=this.poline.addAnchorPoint({xyz:[n,r,r]});return this.updateSVG(),this.dispatchEvent(new CustomEvent("poline-change",{detail:{poline:this.poline}})),l}updateLightnessBackground(){var i;let o=(i=this.shadowRoot)==null?void 0:i.querySelector(".picker");o&&this.poline&&(this.poline.invertedLightness?(o.style.setProperty("--maxL","#000"),o.style.setProperty("--minL","#fff")):(o.style.setProperty("--maxL","#fff"),o.style.setProperty("--minL","#000")))}render(){if(!this.shadowRoot)return;this.shadowRoot.innerHTML=`
      <style>
        :host {
          display: block;
          width: 100%;
        }
        .picker {
          position: relative;
          width: 100%;
          aspect-ratio: 1;
          --s: .4;
          --l: .5;
          --minL: #000;
          --maxL: #fff;
          --grad: hsl(0deg calc(var(--s) * 100%) calc(var(--l) * 100%)) 0deg, hsl(60deg calc(var(--s) * 100%) calc(var(--l) * 100%)) 60deg, hsl(120deg calc(var(--s) * 100%) calc(var(--l) * 100%)) 120deg, hsl(180deg calc(var(--s) * 100%) calc(var(--l) * 100%)) 180deg, hsl(240deg calc(var(--s) * 100%) calc(var(--l) * 100%)) 240deg, hsl(300deg calc(var(--s) * 100%) calc(var(--l) * 100%)) 300deg, hsl(360deg calc(var(--s) * 100%) calc(var(--l) * 100%)) 360deg;
        }
        .picker::before {
          content: '';
          position: absolute;
          inset: 0;
          border-radius: 50%;
          background: radial-gradient(closest-side, var(--minL), rgba(255, 255, 255, 0), var(--maxL)), 
                      conic-gradient(from 90deg, var(--grad));
          z-index: 1;
        }
        svg {
          position: relative;
          z-index: 2;
          overflow: visible;
          width: 100%;
        }
        .wheel__line {
          stroke: var(--poline-picker-line-color, #000);
          stroke-width: 0.15;
          fill: none;
        }
        .wheel__anchor {
          cursor: grab;
          stroke: var(--poline-picker-line-color, #000);
          stroke-width: 0.2;
          fill: var(--poline-picker-bg-color, #fff);
        }
        .wheel__anchor:hover {
          cursor: grabbing;
        }
        .wheel__point {
          stroke: var(--poline-picker-line-color, #000);
          stroke-width: 0.15;
          pointer-events: none;
        }
      </style>
    `,this.svg=this.createSVG();let o=document.createElement("div");o.className="picker",o.appendChild(this.svg),this.shadowRoot.appendChild(o),this.wheel=this.svg.querySelector(".wheel"),this.line=this.svg.querySelector(".wheel__line"),this.anchors=this.svg.querySelector(".wheel__anchors"),this.points=this.svg.querySelector(".wheel__points"),this.poline&&this.updateSVG()}createSVG(){let o=document.createElementNS(C,"svg");return o.setAttribute("viewBox",`0 0 ${p} ${p}`),o.innerHTML=`
      <defs>
        <filter id="goo">
          <feGaussianBlur in="SourceGraphic" stdDeviation="1" result="blur" />
          <feColorMatrix in="blur" mode="matrix" values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7" result="goo" />
          <feBlend in="SourceGraphic" in2="goo" />
        </filter>
      </defs>
      <g class="wheel" filter="url(#goo)">
        <polyline class="wheel__line" points="" />
        <g class="wheel__anchors"></g>
        <g class="wheel__points"></g>
      </g>
    `,o}updateSVG(){if(!this.poline||!this.svg)return;let o=this.poline.flattenedPoints.map(i=>{let n=this.pointToCartesian(i);if(!n)return"";let[r,l]=n;return`${r},${l}`}).filter(i=>i!=="").join(" ");this.line.setAttribute("points",o),this.anchors.innerHTML="",this.points.innerHTML="",this.poline.anchorPoints.forEach(i=>{let n=this.pointToCartesian(i);if(!n)return;let[r=0,l=0]=n,s=document.createElementNS(C,"circle");s.setAttribute("class","wheel__anchor"),s.setAttribute("cx",r.toString()),s.setAttribute("cy",l.toString()),s.setAttribute("r","2"),s.setAttribute("fill",i.hslCSS),this.anchors.appendChild(s)}),this.poline.flattenedPoints.forEach(i=>{let n=this.pointToCartesian(i);if(!n)return;let[r=0,l=0]=n,s=document.createElementNS(C,"circle");s.setAttribute("class","wheel__point"),s.setAttribute("cx",r.toString()),s.setAttribute("cy",l.toString());let c=.5+i.color[1];s.setAttribute("r",c.toString()),s.setAttribute("fill",i.hslCSS),this.points.appendChild(s)})}pointToCartesian(o){let i=p/2,n=i+(o.x-.5)*p,r=i+(o.y-.5)*p;return[n,r]}addEventListeners(){this.svg.addEventListener("pointerdown",o=>{o.stopPropagation();let{normalizedX:i,normalizedY:n}=this.pointerToNormalizedCoordinates(o),r=this.poline.getClosestAnchorPoint({xyz:[i,n,null],maxDistance:.1});r?this.currentPoint=r:this.allowAddPoints&&(this.currentPoint=this.poline.addAnchorPoint({xyz:[i,n,n]}),this.updateSVG(),this.dispatchEvent(new CustomEvent("poline-change",{detail:{poline:this.poline}})))}),this.svg.addEventListener("pointermove",o=>{if(this.currentPoint){let{normalizedX:i,normalizedY:n}=this.pointerToNormalizedCoordinates(o);this.poline.updateAnchorPoint({point:this.currentPoint,xyz:[i,n,this.currentPoint.z]}),this.updateSVG(),this.dispatchEvent(new CustomEvent("poline-change",{detail:{poline:this.poline}}))}}),this.svg.addEventListener("pointerup",()=>{this.currentPoint=null})}getPointerPosition(o){let i=this.svg.getBoundingClientRect();return{x:o.clientX-i.left,y:o.clientY-i.top}}pointerToNormalizedCoordinates(o){let i=this.svg.getBoundingClientRect(),n=(o.clientX-i.left)/i.width*p,r=(o.clientY-i.top)/i.height*p;return{normalizedX:n/p,normalizedY:r/p}}};customElements.define("poline-picker",g);
